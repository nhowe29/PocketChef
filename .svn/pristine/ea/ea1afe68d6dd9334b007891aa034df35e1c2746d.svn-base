package com.example.pocketchef;

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.CallableStatement;

import com.dm.zbar.android.scanner.ZBarConstants;
import com.dm.zbar.android.scanner.ZBarScannerActivity;

import android.os.AsyncTask;
import android.os.Bundle;
import android.app.Activity;
import android.view.Menu;
import android.content.Intent;
import android.view.View;
import android.view.View.OnClickListener;
import android.widget.Button;
import android.widget.TextView;
import android.widget.Toast;

public class MainActivity extends Activity implements OnClickListener
{
	private Button scanBtn;
	private TextView formatTxt;
	private TextView contentTxt;

	private Button registerBtn;
	private TextView dbTxt;
	
	private static final int ZBAR_SCANNER_REQUEST = 0;

	@Override
	protected void onCreate(Bundle savedInstanceState)
	{
		super.onCreate(savedInstanceState);
		
		setContentView(R.layout.activity_main);
		scanBtn = (Button) findViewById(R.id.scan_button);
		formatTxt = (TextView) findViewById(R.id.scan_format);
		contentTxt = (TextView) findViewById(R.id.scan_content);
		scanBtn.setOnClickListener(this);
		
		// Tyler's database test button thing
		registerBtn = (Button) findViewById(R.id.button01);
		dbTxt = (TextView) findViewById(R.id.textView1);
		registerBtn.setOnClickListener(this);
	}

	@Override
	public boolean onCreateOptionsMenu(Menu menu)
	{
		// Inflate the menu; this adds items to the action bar if it is present.
		getMenuInflater().inflate(R.menu.main, menu);
		return true;
	}

	public void onClick(View v)
	{
		if (v.getId() == R.id.scan_button)
		{
			// Old scan code
			// IntentIntegrator scanIntegrator = new IntentIntegrator(this);
			// scanIntegrator.initiateScan();

			// Test scan code
			Intent intent = new Intent(this, ZBarScannerActivity.class);
			startActivityForResult(intent, ZBAR_SCANNER_REQUEST);
		}
		if (v.getId() == R.id.button01)
		{
			int userIDs[] = { 0 };
			new DatabaseTestTask().execute(userIDs);
			
		}
	}

	private class DatabaseTestTask extends AsyncTask<int[], Void, String>
	{
		private static final String url = "jdbc:mysql://mysql.cs.iastate.edu/db30910";
	    private static final String user = "u30910";
	    private static final String pass = "YSBGwKwZN";

		@Override
		protected String doInBackground(int[]... params) {
			Connection con;
			String success = "Failed";
			try {
	            Class.forName("com.mysql.jdbc.Driver").newInstance();
	            con = DriverManager.getConnection(url, user, pass);
	            success = "Connected!";
	            
	            CallableStatement cs = null;
	            ResultSet rs = null;
	        	cs = (CallableStatement) con.prepareCall("{call Users_GetUserByID(?)}");
	        	cs.setFloat(1, params[0][0]);
	        	rs = cs.executeQuery();
	        	rs.next();
	        	success = rs.getString(2);
	        }
	        catch(Exception e) {
	            e.printStackTrace();
	        }
			
			return success;
		}
		
		protected void onPostExecute(String result)
		{
			dbTxt.setText(result);
		}
	}
	
	public void onActivityResult(int requestCode, int resultCode, Intent data)
	{
		// Test scan code
		if (resultCode == RESULT_OK)
		{
			// Scan result is available by making a call to
			// data.getStringExtra(ZBarConstants.SCAN_RESULT)
			String scanContent = data.getStringExtra(ZBarConstants.SCAN_RESULT);
			int scanFormat = data.getIntExtra(ZBarConstants.SCAN_RESULT_TYPE, 0);
			
			// Type of the scan result is available by making a call to
			// data.getStringExtra(ZBarConstants.SCAN_RESULT_TYPE)
			formatTxt.setText("FORMAT: " + scanFormat);
			contentTxt.setText("CONTENT: " + scanContent);
			// The value of type indicates one of the symbols listed in Advanced
			// Options below.
		}
		else if (resultCode == RESULT_CANCELED)
		{
			Toast.makeText(this, "Camera unavailable. This error is expected on an emulator.", Toast.LENGTH_SHORT)
					.show();
		}

		/*
		 * Old scanner code IntentResult scanningResult =
		 * IntentIntegrator.parseActivityResult(requestCode, resultCode,
		 * intent); if (scanningResult != null) { String scanContent =
		 * scanningResult.getContents(); String scanFormat =
		 * scanningResult.getFormatName(); formatTxt.setText("FORMAT: " +
		 * scanFormat); contentTxt.setText("CONTENT: " + scanContent); } else {
		 * Toast toast = Toast.makeText(getApplicationContext(),
		 * "No scan data received!", Toast.LENGTH_SHORT); toast.show(); }
		 */
	}

}
